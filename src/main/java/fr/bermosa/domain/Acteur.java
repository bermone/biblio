/**
 * File generated from the Acteur uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 */
package fr.bermosa.domain;

import javax.persistence.OneToMany;
import javax.validation.constraints.NotNull;

import org.springframework.roo.addon.javabean.RooJavaBean;
import org.springframework.roo.addon.jpa.activerecord.RooJpaActiveRecord;
import org.springframework.roo.addon.tostring.RooToString;

import java.util.HashSet;
import java.util.Set;
import java.util.Date;

// Start of user code (imports)
import javax.persistence.Id;
import org.springframework.format.annotation.DateTimeFormat;
// End of user code

@RooJavaBean
@RooToString(excludeFields = { "roles" })
@RooJpaActiveRecord(sequenceName = "SEQ_ACTEUR", finders = {
// Start of user code (finders)
// End of user code
})
// Start of user code - annotations for Acteur
// End of user code
public class Acteur {

	@NotNull
	// Start of user code - annotations for nom
	// ex: @JoinTable(name="CUST_PHONES")
	// End of user code
	private String nom;
	
	@NotNull
	// Start of user code - annotations for prenom
	// ex: @JoinTable(name="CUST_PHONES")
	// End of user code
	private String prenom;
	
	@NotNull
	// Start of user code - annotations for password
	// ex: @JoinTable(name="CUST_PHONES")
	// End of user code
	private String password;
	
	@DateTimeFormat(style="S-")
	@NotNull
	// Start of user code - annotations for dtInscription
	// ex: @JoinTable(name="CUST_PHONES")
	// End of user code
	private Date dtInscription = new Date();
	
	@NotNull
	// Start of user code - annotations for enabled
	// ex: @JoinTable(name="CUST_PHONES")
	// End of user code
	private boolean enabled = true;
	
	@Id
	@NotNull
	// Start of user code - annotations for username
	// ex: @JoinTable(name="CUST_PHONES")
	// End of user code
	private String username;
	
	@OneToMany(mappedBy="acteur")
	// Start of user code - annotations for roles
	// ex: @JoinTable(name="CUST_PHONES")
	// End of user code
	private Set<Role> roles = new HashSet<Role>();

}
